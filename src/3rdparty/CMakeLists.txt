INCLUDE(ExternalProject)

set(CMAKE_C_FLAGS "")
set(CMAKE_CXX_FLAGS "")
set(CMAKE_C_FLAGS_DEBUG "")
set(CMAKE_CXX_FLAGS_DEBUG "")

IF(LMMS_BUILD_LINUX)
	set(BUILD_SHARED_LIBS OFF)
	add_subdirectory(qt5-x11embed)
ENDIF()

ADD_SUBDIRECTORY(rpmalloc)
ADD_SUBDIRECTORY(weakjack)

SET(EXTERNALPROJECT_CMAKE_ARGS
	"-DCMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}"
	"-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}"
)

IF(CMAKE_TOOLCHAIN_FILE)
	SET(EXTERNALPROJECT_CMAKE_ARGS
		"${EXTERNALPROJECT_CMAKE_ARGS}"
		"-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}"
	)
ENDIF()

ExternalProject_Add(spa-build
	SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}/spa"
	INSTALL_DIR "${CMAKE_CURRENT_BINARY_DIR}/spa/target"
	BUILD_ALWAYS ON
	CMAKE_ARGS
		"${EXTERNALPROJECT_CMAKE_ARGS}"
		"-DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/spa/target"
		"-DBUILD_EXAMPLES=OFF"
)

# Workaround for non-existent INTERFACE_INCLUDE_DIRECTORIES
IF(NOT EXISTS "${CMAKE_CURRENT_BINARY_DIR}/spa/target/include")
	FILE(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/spa/target/include")
ENDIF()
ADD_LIBRARY(SPA STATIC IMPORTED GLOBAL)
ADD_DEPENDENCIES(SPA spa-build)

SET(SPA_LIB_NAME "${CMAKE_STATIC_LIBRARY_PREFIX}spa${CMAKE_STATIC_LIBRARY_SUFFIX}")
SET_TARGET_PROPERTIES(SPA PROPERTIES
	INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_BINARY_DIR}/spa/target/include"
	IMPORTED_LOCATION "${CMAKE_CURRENT_BINARY_DIR}/spa/target/${LIB_DIR}/${SPA_LIB_NAME}"
)

