---
name: build-qt6
'on': [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  macos:
    name: macos
    runs-on: macos-11
    env:
      CMAKE_OPTS: >-
        -DUSE_WERROR=ON
        -DCMAKE_BUILD_TYPE=RelWithDebInfo
        -DUSE_COMPILE_CACHE=ON
        -DWANT_QT6=ON
      CCACHE_MAXSIZE: 500M
      MAKEFLAGS: -j3
      DEVELOPER_DIR: /Applications/Xcode_11.7.app/Contents/Developer
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Cache ccache data
        uses: actions/cache@v3
        with:
          key: ccache-qt6-${{ github.job }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            ccache-qt6-${{ github.job }}-${{ github.ref }}-
            ccache-qt6-${{ github.job }}-
          path: ~/Library/Caches/ccache
      - name: Install dependencies
        run: |
          brew install ccache fftw pkg-config libogg libvorbis lame libsndfile \
                       libsamplerate jack sdl libgig libsoundio lilv lv2 stk \
                       fluid-synth portaudio fltk qt carla
          npm install --location=global appdmg
      - name: Configure
        run: |
          mkdir build
          cmake -S . \
                -B build \
                -DCMAKE_INSTALL_PREFIX="../target" \
                $CMAKE_OPTS \
                -DUSE_WERROR=OFF
      - name: Build
        run: cmake --build build
      - name: Build tests
        run: cmake --build build --target tests
      - name: Run tests
        run: build/tests/tests
      - name: Package
        run: |
          cmake --build build --target install
          cmake --build build --target dmg
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos
          path: build/lmms-*.dmg
      - name: Print ccache statistics
        run: |
          echo "[ccache config]"
          ccache -p
          echo "[ccache stats]"
          ccache -s
  msvc:
    strategy:
      fail-fast: false
      matrix:
        arch: ['x86', 'x64']
    name: msvc-${{ matrix.arch }}
    runs-on: windows-2019
    env:
      qt-version: '6.2.4'
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Cache vcpkg dependencies
        uses: actions/cache@v3
        with:
          key: vcpkg-${{ matrix.arch }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            vcpkg-${{ matrix.arch }}-${{ github.ref }}-
            vcpkg-${{ matrix.arch }}-
          path: C:\vcpkg\installed
      - name: Install 64-bit Qt
        if: matrix.arch == 'x64'
        uses: jurplel/install-qt-action@64bdb64f2c14311d23733a8463e5fcbc65e8775e
        with:
          version: ${{ env.qt-version }}
          arch: win64_msvc2019_64
          archives: qtbase qtsvg qttools
          cache: true
      - name: Install 32-bit Qt
        uses: jurplel/install-qt-action@64bdb64f2c14311d23733a8463e5fcbc65e8775e
        with:
          version: ${{ env.qt-version }}
          arch: win32_msvc2019
          archives: qtbase qtsvg qttools
          cache: true
          set-env: ${{ matrix.arch == 'x86' }}
      - name: Install dependencies
        run: |
          vcpkg install `
            --triplet=${{ matrix.arch }}-windows `
            --host-triplet=${{ matrix.arch }}-windows `
            --recurse `
            fftw3 fltk fluidsynth[sndfile] libsamplerate libsndfile libstk `
            lilv lv2 portaudio sdl2
      - name: Set up build environment
        uses: ilammy/msvc-dev-cmd@d8610e2b41c6d0f0c3b4c46dad8df0fd826c68e1
        with:
          arch: ${{ matrix.arch }}
      - name: Configure
        run: |
          mkdir build
          cmake -S . `
            -B build `
            -G Ninja `
            --toolchain C:/vcpkg/scripts/buildsystems/vcpkg.cmake `
            -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: Build
        run: cmake --build build
      - name: Build tests
        run: cmake --build build --target tests
      - name: Package
        run: cmake --build build --target package
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: msvc-${{ matrix.arch }}
          path: build\lmms-*.exe
